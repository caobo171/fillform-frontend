// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Users {
    id                    Int    @id @default(autoincrement())
    username              String @db.VarChar(255)
    password              String @db.VarChar(255)
    fullname              String @db.VarChar(255)
    last_name             String @db.VarChar(255)
    first_name            String @db.VarChar(255)
    email                 String @db.VarChar(255)
    avatar                String @db.VarChar(255)
    role                  Int
    cover_avatar          String @db.VarChar(255)
    status                Int
    address               String @db.Text
    user_type             String @db.Text
    phone                 String @db.VarChar(128)
    sex                   String @db.VarChar(32)
    description           String @db.Text
    last_login            Int
    since                 Int
    contact               String @db.VarChar(255)
    last_update           Int
    data                  String @db.Text
    facebook              String @db.Text
    seen_notification_ids String @db.Text

    @@index([username])
}

model UserBillboards {
    id          Int    @id @default(autoincrement())
    metatype    String @db.VarChar(128)
    username    String @db.VarChar(255)
    fullname    String @db.VarChar(255)
    user_id     Int
    avatar      String @db.VarChar(255)
    total_score Float
    since       Int
    last_update Int
    records     String @db.Text

    @@index([username])
}

model CycleBillboards {
    id          Int    @id @default(autoincrement())
    metatype    String @db.VarChar(128)
    podcast_id  Int
    user_id     Int
    score       Float
    since       Int
    last_update Int
    results     String @db.Text

    @@index([user_id])
}

model PersonalRecord {
    id              Int    @id @default(autoincrement())
    metatype        String @db.VarChar(128)
    username        String @db.VarChar(255)
    user_id         Int
    following_users String @db.Text
    vocabs          String @db.Text
    time_listen     String @db.Text
    points          String @db.Text
    words           String @db.Text
    cache_submits   String @db.Text
    cache_vocabs    String @db.Text
}

model UserActionLog {
    id               Int    @id @default(autoincrement())
    user_id          Int
    podcast_id       String @db.VarChar(128)
    status           Int
    data             String @db.Text
    content          String @db.Text
    metatype         String @db.VarChar(128)
    action           String @db.VarChar(128)
    start_time       Int
    likes            Int    @default(0)
    like_logs        String @db.Text
    comments         String @db.Text
    comment_count    Int    @default(0)
    allow_comment    Int    @default(1) @db.TinyInt
    is_public        Int    @default(1) @db.TinyInt
    end_time         Int
    duration         Int    @default(0)
    podcast_image    String @db.Text
    podcast_name     String @db.VarChar(255)
    podcast_sub_name String @db.VarChar(255)
    user_name        String @db.VarChar(255)
    user_avatar      String @db.VarChar(255)
}

model PodcastCollection {
    id          Int    @id @default(autoincrement())
    description String @db.Text
    data        String @db.Text
    name        String @db.VarChar(255)
    since       Int
    last_update Int
    views       Int
}

model Podcast {
    id            Int    @id @default(autoincrement())
    metatype      String @db.VarChar(128)
    user_id       Int
    download_link String @db.Text
    data          String @db.Text
    description   String @db.Text
    duration      Int
    image_url     String @db.Text
    hint          String @db.Text
    narrator      String @db.Text
    source_key    Int    @db.TinyInt
    since         Int
    last_update   Int
    file_size     Int
    file_path     String @db.Text
    name          String @default("") @db.VarChar(255)
    sub_name      String @db.VarChar(255)
    result        String @db.Text
    status        Int    @default(1)
    views         Int
    members       String @db.Text
    member_count  Int    @default(0)
    collections   String @db.VarChar(255)
    class_id      Int    @default(0)
    private       Int    @default(0)

    @@index([class_id])
}

model PodcastTranscription {
    id                             Int    @id @default(autoincrement())
    podcast_id                     Int    @default(0)
    transcriptions                 String @db.LongText
    origin_transcription_sentences String @db.LongText
    origin_transcriptions          String @db.LongText
    transcription_sentences        String @db.LongText
    transcription_words            String @db.LongText

    @@index([podcast_id])
}

model PodcastSubmit {
    id                  Int    @id @default(autoincrement())
    metatype            String @db.VarChar(128)
    user_id             Int
    content             String @db.Text
    data                String @db.Text
    status              Int
    draft_array         String @db.Text
    podcast_id          Int
    submit_time         Int    @default(0)
    podcast_name        String @db.VarChar(255)
    podcast_subname     String @db.VarChar(255)
    podcast_result      String @db.Text
    podcast_hints       String @db.Text
    compare_result      String @db.Text
    results             String @db.Text
    since               Int
    last_update         Int
    user_name           String @db.VarChar(255)
    user_avatar         String @db.Text
    current_time_listen Int
    listen_time         Int
    point               Float

    @@index([user_id])
}

model Challenge {
    id               Int    @id @default(autoincrement())
    metatype         String @db.VarChar(255)
    name             String @db.VarChar(255)
    user_id          Int
    data             String @db.Text
    description      String @db.Text
    background_image String @db.Text
    start_time       Int
    end_time         Int
    since            Int
    last_update      Int
    status           String @db.VarChar(15)
    podcast_ids      String @db.Text
    challenge_type   String @db.Text
    type_keys        String @db.VarChar(15)

    @@index([status])
}

model Comments {
    id            Int    @id @default(autoincrement())
    metatype      String @db.VarChar(128)
    object_id     Int
    object_export String @db.Text
    object_type   String @db.VarChar(128)
    since         Int
    last_update   Int
    content       String @db.Text
    data          String @db.Text
    user_id       Int
    user_name     String @db.VarChar(255)
    user_avatar   String @db.Text

    @@index([user_id, object_id])
}

model Notifications {
    id            Int    @id @default(autoincrement())
    metatype      String @db.VarChar(128)
    object_id     Int
    object_export String @db.Text
    object_type   String @db.VarChar(128)
    since         Int
    status        Int    @default(0)
    object_status Int    @default(0)
    content       String @db.Text
    data          String @db.Text
    link          String @db.Text
    action        String @db.VarChar(128)
    image         String @db.Text
    user_id       Int
    user_name     String @db.VarChar(255)
    user_avatar   String @db.Text
    from_id       Int
    from_name     String @db.VarChar(255)
    from_avatar   String @db.Text
}

model SystemNotification {
    id               Int    @id @default(autoincrement())
    notification_ids String @db.Text
    metatype         String @db.VarChar(128)
    is_private       Int    @default(0)
    receivers        String @db.Text
    title            String @default("") @db.VarChar(255)
    image            String @db.VarChar(500)
    content          String @db.Text
    data             String @db.Text
    link             String @db.Text
    since            Int
    last_update      Int
    publish_time     Int
    user_id          Int    @default(0)

    @@index([user_id])
}

model Certifications {
    id                 Int    @id @default(autoincrement())
    metatype           String @db.VarChar(128)
    since              Int    @default(0)
    last_update        Int
    image              String @db.Text
    for_user_id        Int    @default(0)
    for_user_name      String @db.VarChar(255)
    for_user_avatar    String @db.VarChar(255)
    certification_type Int
    content            String @db.Text
    user_id            Int    @default(0)
    user_name          String @db.VarChar(255)
    user_avatar        String @db.VarChar(255)
    user_action_log_id Int
    data               String @db.Text
}

model UserBadges {
    id          Int    @id @default(autoincrement())
    metatype    String @db.VarChar(128)
    since       Int    @default(0)
    last_update Int
    user_id     Int    @default(0)
    obj         String @db.Text
    badge_name  String @db.VarChar(127)
    seen        Int    @default(0)
    data        String @db.Text
    value       String @db.VarChar(127)

    @@index([user_id, badge_name, value])
    @@index([user_id])
}

model RecordChallengeUser {
    id                Int    @id @default(autoincrement())
    metatype          String @db.Text
    user_id           Int
    challenge_id      Int
    data              String @db.Text
    since             Int
    last_update       Int
    status            Int
    point             Int
    hash_key          String @db.VarChar(50)
    time_listen       Int    @default(0)
    total_time_listen Int
    team_id           Int    @default(0)
    rank_record       String @db.Text
    username          String @db.VarChar(127)

    @@index([username])
    @@index([hash_key])
}

model WeleClass {
    id          Int    @id @default(autoincrement())
    user_id     Int    @default(0)
    name        String @db.VarChar(255)
    owner_id    Int    @default(0)
    image_url   String @db.Text
    content     String @db.Text
    members     String @db.MediumText
    metatype    String @db.VarChar(32)
    since       Int    @default(0)
    last_update Int

    @@index([owner_id])
}

model WeleClassFollowing {
    id        Int    @id @default(autoincrement())
    user_id   Int    @default(0)
    image_url String @db.Text
    name      String @db.VarChar(255)
    content   String @db.Text
    owner_id  Int    @default(0)
    ownering  Int    @default(0)
    membering Int    @default(0)
    object_id Int    @default(0)
    metatype  String @db.VarChar(32)
    members   String @db.Text

    since       Int @default(0)
    last_update Int

    @@index([user_id])
    @@index([ownering])
    @@index([membering])
}

model PodcastChallenge {
    id                       Int    @id @default(autoincrement())
    user_id                  Int
    podcast_id               Int
    challenge_id             Int
    record_challenge_user_id Int
    metatype                 String @db.Text
    data                     String @db.Text
    point                    Int
    time_listen              Int
    last_update              Int
    status                   Int
    results                  String @db.Text
    submit_time              Int
    hash_key                 String @db.VarChar(50)
    rank_record              String @db.Text

    @@index([hash_key])
}

model TeamChallenge {
    id                 Int    @id @default(autoincrement())
    name               String @db.Text
    avatar             String @db.Text
    metatype           String @db.Text
    description        String @db.Text
    user_id            Int
    challenge_id       Int
    data               String @db.Text
    create_at          Int
    last_update        Int
    status             Int
    user_ids           String @db.Text
    hash_key           String @db.VarChar(30)
    point              Int
    user_invited_ids   String @db.Text
    user_banned_ids    String @db.Text
    user_requested_ids String @db.Text
    admin_ids          String @db.Text
    time_listen        Int
    rank_record        String @db.Text

    @@index([hash_key])
}

model UserPlaylists {
    id          Int    @id @default(autoincrement())
    user_id     Int
    name        String @db.VarChar(255)
    podcasts    String @db.Text
    last_update Int
    since       Int

    @@index([user_id])
}

model OrderSubscription {
    id          Int    @id @default(autoincrement())
    name        String @db.VarChar(255)
    status      Int
    plan        String @db.VarChar(32)
    period      String @db.VarChar(32)
    user_id     Int
    since       Int
    price       Int
    paid        Int
    last_update Int

    @@index([user_id])
}

model Subscriptions {
    id          Int    @id @default(autoincrement())
    name        String @db.VarChar(255)
    status      Int
    plan        String @db.VarChar(32)
    start_date  Int
    end_date    Int
    user_id     Int
    creator_id  Int
    order_id    Int
    free_trial  Int
    paid        Int
    since       Int
    price       Int
    last_update Int

    @@index([user_id])
}
